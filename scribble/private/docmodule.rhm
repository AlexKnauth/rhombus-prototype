#lang rhombus/and_meta

import:
  lib("scribble/manual.rkt") expose:
    defmodule racketmodname
  "rhombus.rhm" open
  meta:
    lib("racket/base.rkt")
  meta_label:
    rhombus expose:
      import

export:
  docmodule
  rhombusmodname

meta:
  fun translate_mod(mod):
    match mod
    | '$(a :: Identifier)': mod
    | '$a / $b ...':
        Syntax.make_id(Syntax.unwrap(a)
                         +& "/"
                         +& translate_mod('$b ...'))
    | 'lib($str)':
        ['lib', str]

  syntax_class Option:
    pattern
    | '~lang':
        field [form, ...]: ['~lang']
    | '~no_declare':
        field [form, ...]: ['#{#:no-declare}']
    | '~use_sources: $modpath; ...':
        field [form, ...]: ['#{#:use-sources}', [translate_mod(modpath), ...]]

decl.macro 'docmodule ($(option :: Option), ..., $mod ...)':
  '$(decl_meta.pack_s_exp(['defmodule',
                           '#{#:require-form}',
                           expr_meta.pack_expr('fun (mod): @rhombus(import: #,(mod))'),
                           translate_mod('$mod ...'),
                           option.form, ..., ...]))'
  
expr.macro 'rhombusmodname ($mod ...) $tail ...':
  values(expr_meta.pack_s_exp(['racketmodname', translate_mod('$mod ...')]),
         '$tail ...')
