#lang rhombus/static/and_meta
import:
  meta:
    rhombus/meta.key_comp
    lib("rhombus/private/syntax-map.rkt").define_equal_name_and_scopes

export:
  equal_name
  meta:
    equal_binding
    equal_name_and_scopes

fun equal_name(a :: Name, b :: Name):
  a.unwrap_all() == b.unwrap_all()

key_comp.def 'equal_name':
  ~equals: block:
             fun equal_name(a :: Name, b :: Name, recur):
               recur(a.unwrap_all(), b.unwrap_all())
             equal_name
  ~hash_code: block:
                fun equal_name(a :: Name, recur):
                  recur(a.unwrap_all())
                equal_name

meta:
  key_comp.def 'equal_binding':
    ~equals: fun (a, b, recur):
               syntax_meta.equal_binding(a, b)
    ~hash_code: block:
                  fun equal_binding(a :: Name, recur):
                    recur(syntax_meta.binding_symbol(a))
                  equal_binding

  define_equal_name_and_scopes equal_name_and_scopes
