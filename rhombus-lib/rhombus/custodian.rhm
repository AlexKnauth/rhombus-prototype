#lang rhombus/static/and_meta
import:
  lib("racket/base.rkt") as rkt
  "private/parameter.rhm"

export:
  Custodian

class Custodian(private _handle):
  opaque
  internal _Custodian
  constructor (~parent: parent :: Custodian = current()):
    from_handle(rkt.#{make-custodian}(parent._handle))

  property handle: _handle

  method shutdown_all():
    rkt.#{custodian-shutdown-all}(_handle)
  method is_shutdown():
    rkt.#{custodian-shut-down?}(_handle)

  class Box(private _handle):
    opaque
    constructor (v,
                 ~custodian: c :: Custodian = current()):
      super(rkt.#{make-custodian-box}(_Custodian._handle(c), v))
    property value: rkt.#{custodian-box-value}(_handle)

  export:
    current
    Box

parameter.def_from_racket current from_handle:
  ~orig: rkt.#{current-custodian}
  ~class: Custodian
  ~_class: _Custodian
  ~_handle: _handle
