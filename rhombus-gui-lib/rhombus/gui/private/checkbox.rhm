#lang rhombus/static/and_meta
import:
  lib("racket/gui/easy.rkt")
  "view.rhm".View
  "obs.rhm":
    expose:
      Obs
      MaybeObs
  "type.rhm":
    expose:
      LabelString

export:
  Checkbox

class Checkbox(private _handle, private _at_checked :: Obs):
  implements View
  override property handle: _handle

  constructor (label :: MaybeObs.of(LabelString),
               ~action: action :: maybe(Function.of_arity(1)) = #false,
               ~is_checked: is_checked :: MaybeObs.of(Boolean) = #false,
               ~is_enabled: is_enabled :: MaybeObs.of(Boolean) = #true):
    let at_checked = obs.to_obs(is_checked)
    let action = action || (fun (on):
                              at_checked.value := on)
    super(easy.checkbox(action,
                        ~label: obs.unwrap(label),
                        ~#{enabled?}: obs.unwrap(is_enabled),
                        ~#{checked?}: obs.unwrap(at_checked)),
          at_checked)

  property at_is_checked :: Obs:
    _at_checked.map(values)
