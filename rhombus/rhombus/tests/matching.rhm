#lang rhombus/and_meta

use_static

class Posn(x, y)

fun get_pt_x(pt :: matching(Posn(_, _))):
  pt.x

check:
  get_pt_x(Posn(1, 2))
  ~is 1

fun get_pts_x(pts :: matching([Posn(_, _), ...])):
  pts[0].x

check:
  get_pts_x([Posn(1, 2)])
  ~is 1

fun nested_pt_x(pt :: matching(Posn(Posn(_, _), _))):
  pt.x.x

annot.macro 'ListOf ($contract ...)':
  'matching([_ :: ($contract ...), $('...')])'

fun get_pts_x2(pts :~ ListOf(Posn)):
  pts[0].x

check:
  get_pts_x2([Posn(5, 7)])
  ~is 5

check:
  0 ~is_a matching(i :: Int when i mod 3 == 0)
  1 ~is_a matching(i :: Int unless i mod 3 == 0)
  [1, 2, 3] ~is_a matching([x, ...] when math.sum(x, ...) == 6)
