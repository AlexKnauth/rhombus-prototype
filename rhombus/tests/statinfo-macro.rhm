#lang rhombus/and_meta

namespace sub:
  export x
  statinfo.macro 'x':
    '((anything, "yes"))'

check:
  expr.macro 'use_x':
    statinfo_meta.lookup('sub.x', 'anything')
  use_x
  ~is "yes"

expr.macro 'two $(pre_expr :: expr_meta.Parsed) $()':
  def expr = expr_meta.parse_more(pre_expr)
  def si = statinfo_meta.lookup(expr, statinfo_meta.index_get_key)
  statinfo_meta.wrap(expr_meta.parse_more('[$expr, $expr]'),
                     '(($statinfo_meta.index_result_key,
                        $(statinfo_meta.pack('(($statinfo_meta.index_get_key, $si))'))))')

macro 'list_of_zero': '[0]'

check:
  use_static
  ((two list_of_zero)[0])[0]
  ~is 0

block:
  import:
    meta -1: rhombus/meta open
  check:
    statinfo_meta.unpack(statinfo_meta.pack('((x, y))'))
    ~prints_like '((x, y))'
  check:
    statinfo_meta.unpack(statinfo_meta.pack('((x, y), (z, w))'))
    ~prints_like '((x, y), (z, w))'
  check:
    statinfo_meta.unpack_group(statinfo_meta.pack_group('((x, y))'))
    ~prints_like '((x, y))'
  check:
    statinfo_meta.unpack_group(statinfo_meta.pack_group('((x, y)) ((z, w))'))
    ~prints_like '((x, y)) ((z, w))'
