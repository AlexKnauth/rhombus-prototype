#lang rhombus

check:
  Array.length(Array(1, 2, 3))
  ~is 3

check:
  Array.length([1, 2, 3])
  ~raises values("contract violation", "expected: Array")

block:
  use_static
  check:
    Array(1, 2, 3).length()
    ~is 3
  check:
    Array(1, 2, 3)[0]
    ~is 1
  check:
    Array(1, 2, 3).length()
    ~is 3
  check:
    def arr = Array(1, 2, 3)
    arr.length()
    ~is 3
  check:
    def arr :: Array = dynamic(Array(1, 2, 3))
    arr.length()
    ~is 3
  check:
    def arr :~ Array = dynamic(Array(1, 2, 3))
    arr.length()
    ~is 3
  check:
    def arr :: Array.of(Int) = dynamic(Array(1, 2, 3))
    arr.length()
    ~is 3
  check:
    def [v, ...] = dynamic([1, 2, 3])
    Array(v, ...).length()
    ~is 3
  check:
    class Posn(x, y)
    def arr :: Array.of(Posn) = Array(Posn(1, 2))
    arr[0].x
    ~is 1

block:
  check:
    dynamic(Array(1, 2, 3)).length()
    ~is 3
  check:
    dynamic(Array(1, 2, 3))[0]
    ~is 1
