#lang rhombus/static/and_meta

block:
  import "static_arity.rhm"
  static_arity.check ~meta:
    class_meta.describe(id)
    class_meta.Info.lookup(info, key) ~method
    interface_meta.describe(id)
    interface_meta.Info.lookup(info, key) ~method
    veneer_meta.describe(id)
    veneer_meta.Info.lookup(info, key) ~method

block:
  class_clause.macro 'bounce':
    ~info: i
    'method names(): ('$(class_meta.Info.lookup(i, #'name))')
     method supers(): ('$(i.lookup(#'extends))')
     method intfs(): ('$(i.lookup(#'implements))')
     method internals(): ('$(i.lookup(#'internal_names))')
     method fields(): ('$(i.lookup(#'field_names))')
     method keywords(): ('$(i.lookup(#'field_keywords))')
     method mutables(): ('$(i.lookup(#'field_mutabilities))')
     method visibilities(): ('$(i.lookup(#'field_visibilities))')
     method constructives(): ('$(i.lookup(#'field_constructives))')
     method methods(): ('$(i.lookup(#'method_names))')
     method mvisibilities(): ('$(i.lookup(#'method_visibilities))')
     method marities(): ('$(i.lookup(#'method_arities))')
     method defaults(): ('$(i.lookup(#'uses_default_constructor))
                          $(i.lookup(#'uses_default_binding))
                          $(i.lookup(#'uses_default_annotation))')'
  interface_clause.macro 'ibounce':
    ~info: i
    'method supers(): ('$(interface_meta.Info.lookup(i, #'extends))')
     method methods(): ('$(i.lookup(#'method_names))')
     method arities(): ('$(i.lookup(#'method_arities))')
     method visibilities(): ('$(i.lookup(#'method_visibilities))')'
  defn.macro 'def_describe $name $key':
    '«expr.macro '$name $('$')(id :: Identifier)': '('$('$')(class_meta.describe(id).lookup(#'$key))')'»'
  defn.macro 'def_idescribe $name $key':
    '«expr.macro '$name $('$')(id :: Identifier)': '('$('$')(interface_meta.describe(id).lookup(#'$key))')'»'
  def_describe dname name
  def_describe dsuper extends
  def_describe dinterfaces implements
  def_describe dinterfaces_vis implements_visibilities
  def_describe dinternals internal_names
  def_describe dfields field_names
  def_describe dfield_visabilities field_visibilities
  def_describe dfield_keywords field_keywords
  def_describe dfield_constructives field_constructives
  def_describe dfield_mutabilities field_mutabilities
  def_describe dmethods method_names
  def_describe darities method_arities
  expr.macro 'dctr $(name :: Term)': '$(class_meta.describe(name).lookup(#'uses_default_constructor))'
  expr.macro 'dbind $(name :: Term)': '$(class_meta.describe(name).lookup(#'uses_default_binding))'
  expr.macro 'dann $(name :: Term)': '$(class_meta.describe(name).lookup(#'uses_default_annotation))'
  def_idescribe diname name
  def_idescribe disuper extends
  def_idescribe dimethods method_names
  expr.macro 'diann $(name :: Term)': '$(interface_meta.describe(name).lookup(#'uses_default_annotation))'

  block:
    interface Pointy
    interface VeryPointy:
      extends Pointy
      method get_extent(): "very_small"
      ibounce
    class Posn(x, y):
      nonfinal
      method is_origin(): x == 0 && y == 0
    class Posn3D(z):
      field color = "red"
      extends Posn
      implements Pointy
      method get_color(): color
      bounce
    class Posn0D():
      implements VeryPointy
    def p = Posn3D(1, 2, 3)
    def p0 = Posn0D()
    check:
      p.names() ~matches 'Posn3D'
      p.supers() ~matches 'Posn'
      p.intfs() ~matches 'Pointy'
      p.internals() ~matches ''
      p.fields() ~matches 'z color'
      p.keywords() ~matches '#false #false'
      p.mutables() ~matches 'immutable mutable'
      p.visibilities() ~matches 'public public'
      p.constructives() ~matches 'required absent'
      p.methods() ~matches 'get_color'
      p.mvisibilities() ~matches 'public'
      p.marities() ~matches '1'
      p.defaults() ~matches '#true; #true; #true'
      p0.supers() ~matches 'Pointy'
      p0.methods() ~matches 'get_extent'
      p0.visibilities() ~matches 'public'
      p0.arities() ~matches '1'

    block:
      check:
        dname Posn ~matches 'Posn'
        dsuper Posn ~matches ''
        dinterfaces Posn ~matches ''
        dfields Posn ~matches 'x y'
        dfield_keywords Posn ~matches '#false #false'
        dfield_visabilities Posn ~matches 'public public'
        dfield_constructives Posn ~matches 'required required'
        dfield_mutabilities Posn ~matches 'immutable immutable'
        dmethods Posn ~matches 'is_origin'
        darities Posn ~matches '1'
        dinternals Posn ~matches ''
      check:
        dname Posn3D ~matches 'Posn3D'
        dsuper Posn3D ~matches 'Posn'
        dinterfaces Posn3D ~matches 'Pointy'
        dfields Posn3D ~matches 'x y z color'
        dfield_keywords Posn3D ~matches '#false #false #false #false'
        dfield_visabilities Posn3D ~matches 'public public public public'
        dfield_constructives Posn3D ~matches 'required required required absent'
        dfield_mutabilities Posn3D ~matches 'immutable immutable immutable mutable'
        dmethods Posn3D ~matches 'is_origin get_color
                                    $('names supers intfs internals fields keywords')
                                    $('mutables visibilities constructives')
                                    $('methods mvisibilities marities defaults')'
      check:
        dname Posn0D ~matches 'Posn0D'
        dsuper Posn0D ~matches ''
        dinterfaces Posn0D ~matches 'VeryPointy'
        dfields Posn0D ~matches ''
        dfield_keywords Posn0D ~matches ''
        dfield_visabilities Posn0D ~matches ''
        dfield_constructives Posn0D ~matches ''
        dfield_mutabilities Posn0D ~matches ''
        dmethods Posn0D ~matches 'get_extent
                                    $('supers methods arities visibilities')'

  block:
    interface Pointy:
      internal _Pointy
      method here(): 0
      private method inside(): 1
    interface Secret:
      internal _UnusedSecret
      internal _Secret
    class Posn3D(x, ~y: mutable y = 11, private z = 10):
      nonfinal
      internal _Posn3D
      implements Pointy
      field color = "red"
      private field size = #'large
      method get_color(): color
      private method get_size(): size
      bounce
    class Posn4D(~w = 12, q = 13, private s = 10):
      extends Posn3D
      private field weight = "heavy"
      field angle = #'wide
      internal _Posn4D
      private implements: Secret
    def p = Posn3D(1)
    def p4 = Posn4D(1)
    check:
      diname Pointy ~matches 'Pointy'
      disuper Pointy ~matches ''
      dimethods Pointy ~matches 'here'
      diann Pointy ~is #true
    check:
      diname _Pointy ~matches 'Pointy'
      disuper _Pointy ~matches ''
      dimethods _Pointy ~matches 'inside here'
      diann _Pointy ~is #true
    check:
      p.fields() ~matches 'x y z color size'
      p.mutables() ~matches 'immutable mutable immutable mutable mutable'
      p.visibilities() ~matches 'public public private public private'
      p.keywords() ~matches '#false ~y #false #false #false'
      p.constructives() ~matches 'required optional absent absent absent'
      p.methods() ~matches 'get_color get_size'
      p.mvisibilities() ~matches 'public private'
      p.internals() ~matches '_Posn3D'
    check:
      dname Posn3D ~matches 'Posn3D'
      dsuper Posn3D ~matches ''
      dinterfaces Posn3D ~matches 'Pointy'
      dfields Posn3D ~matches 'x y color'
      dfield_keywords Posn3D ~matches '#false ~y #false'
      dfield_visabilities Posn3D ~matches 'public public public'
      dfield_constructives Posn3D ~matches 'required optional absent'
      dfield_mutabilities Posn3D ~matches 'immutable mutable mutable'
      dmethods Posn3D ~matches 'here get_color
                                  $('names supers intfs internals fields keywords')
                                  $('mutables visibilities constructives')
                                  $('methods mvisibilities marities defaults')'
      dctr Posn3D ~is #true
      dbind Posn3D ~is #true
      dann Posn3D ~is #true
    check:
      dname _Posn3D ~matches 'Posn3D'
      dsuper _Posn3D ~matches ''
      dinterfaces _Posn3D ~matches 'Pointy'
      dinterfaces_vis _Posn3D ~matches 'public'
      dfields _Posn3D ~matches 'x y z color size'
      dfield_keywords _Posn3D ~matches '#false ~y #false #false #false'
      dfield_visabilities _Posn3D ~matches 'public public private public private'
      dfield_constructives _Posn3D ~matches 'required optional optional absent absent'
      dfield_mutabilities _Posn3D ~matches 'immutable mutable immutable mutable mutable'
      dmethods _Posn3D ~matches 'get_size here get_color
                                   $('names supers intfs internals fields keywords')
                                   $('mutables visibilities constructives')
                                   $('methods mvisibilities marities defaults')'
    check:
      dname Posn4D ~matches 'Posn4D'
      dsuper Posn4D ~matches 'Posn3D'
      dinterfaces Posn4D ~matches ''
      dinterfaces_vis Posn4D ~matches ''
      dfields Posn4D ~matches 'x y color w q angle'
      dfield_keywords Posn4D ~matches '#false ~y #false ~w #false #false'
      dfield_visabilities Posn4D ~matches 'public public public public public public'
      dfield_constructives Posn4D ~matches 'required optional absent optional optional absent'
      dfield_mutabilities Posn4D ~matches 'immutable mutable mutable immutable immutable mutable'
      dmethods Posn4D ~matches 'here get_color
                                  $('names supers intfs internals fields keywords')
                                  $('mutables visibilities constructives')
                                  $('methods mvisibilities marities defaults')'
    check:
      dname _Posn4D ~matches 'Posn4D'
      dsuper _Posn4D ~matches 'Posn3D'
      dinterfaces _Posn4D ~matches 'Secret'
      dinterfaces_vis _Posn4D ~matches 'private'
      dfields _Posn4D ~matches 'x y color w q s weight angle'
      dfield_keywords _Posn4D ~matches '#false ~y #false ~w #false #false #false #false'
      dfield_visabilities _Posn4D ~matches 'public public public public public private private public'
      dfield_constructives _Posn4D ~matches 'required optional absent optional optional optional absent absent'
      dfield_mutabilities _Posn4D ~matches 'immutable mutable mutable immutable immutable immutable mutable mutable'
      dmethods _Posn4D ~matches 'here get_color
                                   $('names supers intfs internals fields keywords')
                                   $('mutables visibilities constructives')
                                   $('methods mvisibilities marities defaults')'

// Make sure that introduced names can be referenced directly

block:
  class_clause.macro 'gen $mode ... : $m':
    '$mode ... method introduced(): 5
     method $m(): introduced()'

  check:
    class Posn(x, y):
      gen: five
    Posn(1, 2).five()
    ~is 5

  check:
    class Posn(x, y):
      gen private: five
    Posn(1, 2).five()
    ~is 5

block:
  class_clause.macro 'gen $mode ... : $m':
    '$mode ... property | introduced: 5
     method $m(): introduced'

  check:
    class Posn(x, y):
      gen: five
    Posn(1, 2).five()
    ~is 5

  check:
    class Posn(x, y):
      gen private: five
    Posn(1, 2).five()
    ~is 5

block:
  class_clause.macro 'gen $mode ... : $m':
    '$mode ... field introduced: 5
     method $m(): introduced'

  check:
    class Posn(x, y):
      gen: five
    Posn(1, 2).five()
    ~is 5

  check:
    class Posn(x, y):
      gen private: five
    Posn(1, 2).five()
    ~is 5
