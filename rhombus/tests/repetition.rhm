#lang rhombus
import: "check.rhm" open

begin:
  def [x, ...] = [1, 2, 3]
  def [[y, ...], ...] = [["a", "b", "c"], ["A", "B", "C"]]
  def [[z, ...], _] = [["a", "b", "c"], ["A", "B", "C"]]
  def [_, &[q]] = [["a", "b", "c"], ["A", "B", "C"]]
  def [_, &[w, ...]] = [["a", "b", "c"], ["A", "B", "C"]]

  check:
    [x, ...]
    [1, 2, 3]
  check:
    ~print
    '[($y) ...] ...'
    '[("a") ("b") ("c")] [("A") ("B") ("C")]'
  check:
    ~print
    '[($z) ...]'
    '[("a") ("b") ("c")]'
  check:
    q
    ["A", "B", "C"]
  check:
    [w, ...]
    [["A", "B", "C"]]

begin:
  def [x, ...] = [1, 4, 3]
  def four = 4
  check:
    [!(x == four), ...]
    [#true, #false, #true]
  check:
    [(x + (- four)), ...]
    [-3, 0, -1]
  check:
    operator (x %% y): [x, y]
    [x %% four, ...]
    [[1, 4], [4, 4], [3, 4]]

