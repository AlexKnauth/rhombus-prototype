#lang rhombus

import:
  rhombus/scribble open
  lib("scribble/bnf.rkt")

export:
  BNF
  bseq balt boptional nonterm kleenestar kleeneplus boptional bgroup
  bis bor
  nonterm

def bis: @elem{@hspace(1)::=@hspace(1)}
def bor: @elem{@hspace(1) | @hspace(1)}

fun boptional(content, ...):
  [content, ..., @italic{?}]

fun bgroup(content, ...):
  [@elem{( }, content, ..., @elem{ )}]

fun nonterm(pre_content :: PreContent.to_s_exp):
  bnf.nonterm(pre_content)

fun kleenestar(pre_content :: PreContent.to_s_exp):
  bnf.kleenestar(pre_content)

fun kleeneplus(pre_content :: PreContent.to_s_exp):
  bnf.kleeneplus(pre_content)

fun bseq(c :: Content.to_s_exp, ...):
  bnf.#{BNF-seq}(c, ...)

fun balt(e, ...):
  bnf.#{BNF-alt}(e, ...)

fun BNF([nt :: (Block || Content.to_s_exp), clause :: (Block || Content.to_s_exp), ...], ...):
  bnf.BNF(PairList[nt, clause, ...], ...)
